programs=main_csma main main_master main_spi_master main_spi main_spi_csma

devices=328 328p 64a 2560

MAIN_FILES=main_node RNet uart eeprom_layout IO

bdir=build/$(DEVICE)

avr-gcc-args=-g -Wall -Os -Werror -Wextra -mmcu=$(DEVICE)
avr-gcc=avr-gcc $(avr-gcc-args) $(args)

$(bdir)/$(output)/bin:
	@mkdir -p $@

$(bdir)/$(output)/bin/%.o: %.cpp
	@echo "(AVR GCC) $@"
	@$(avr-gcc) -c -Os $*.cpp -MP -MMD -MT '$@ $(bdir)/$(output)/bin/$*.d' -o $(bdir)/$(output)/bin/$*.o -Wa,-ahlmns=$(bdir)/$(output)/bin/$*.lst

$(bdir)/$(output)/$(output).elf: $(addsuffix .o,$(addprefix $(bdir)/$(output)/bin/,$(files)))
	@echo "(AVR ELF) $@"
	@$(avr-gcc) $^ -o $@

$(bdir)/$(output).flash.hex: $(bdir)/$(output)/$(output).elf
	@echo "(AVR HEX) $@"
	@avr-objcopy -j .text -j .data -O ihex $^ $(bdir)/$(output).flash.hex
	@avr-objcopy -j .eeprom --set-section-flags=.eeprom="alloc,load" --change-section-lma .eeprom=0 -O ihex $^ $(bdir)/$(output)/$(output).eeprom
	@avr-objcopy -j .fuse -O ihex $^ $(bdir)/$(output)/$(output).fuses --change-section-lma .fuse=0
#	@+$(MAKE) -f make-avr hex dev=$(DEVICE) dir=build/$(DEVICE) --no-print-directory

all: $(bdir)/$(output)/bin $(bdir)/$(output).flash.hex
	@:

clean:
	rm -rf build
